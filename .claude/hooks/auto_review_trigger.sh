#!/bin/bash
# Ëá™Âãï„É¨„Éì„É•„Éº‰æùÈ†º„Çπ„ÇØ„É™„Éó„Éà
# PostToolUse hook „Åß Write|Edit|MultiEdit Âæå„Å´ÂÆüË°å

source "/home/devuser/workspace/.claude/hooks/tmux_organization_utils.sh"

FILE_PATH="$1"
WORKER_PANE="$2"

# ÁµÑÁπîÊ¥ªÂãïÊñáËÑà„ÅÆÁ¢∫Ë™ç
if ! is_organization_context; then
    exit 0  # ÈÄöÂ∏∏„ÅÆ‰ΩúÊ•≠„Åß„ÅØ‰Ωï„ÇÇ„Åó„Å™„ÅÑ
fi

# ÁèæÂú®„ÅÆ„Éö„Ç§„É≥ÊÉÖÂ†±„ÇíÂèñÂæó
get_current_pane_info

# „Éï„Ç°„Ç§„É´„Éë„Çπ„ÅÆÊ§úË®º
if [[ -z "$FILE_PATH" || ! -f "$FILE_PATH" ]]; then
    log_organization_activity "AUTO_REVIEW_TRIGGER: Invalid file path: $FILE_PATH"
    exit 1
fi

# „É¨„Éì„É•„Éº„ÉÅ„Éº„É†„Éö„Ç§„É≥„ÅÆÁâπÂÆö
REVIEW_PANES=($(find_review_panes))

if [[ ${#REVIEW_PANES[@]} -eq 0 ]]; then
    log_organization_activity "AUTO_REVIEW_TRIGGER: No review panes found"
    # ProjectManager„Å´ÈÄöÁü•
    PM_PANE=$(find_project_manager_pane)
    if [[ -n "$PM_PANE" ]]; then
        send_tmux_message "$PM_PANE" "‚ö†Ô∏è Review team unavailable for file: $FILE_PATH"
    fi
    exit 1
fi

# ÊúÄÂàù„ÅÆÂà©Áî®ÂèØËÉΩ„Å™„É¨„Éì„É•„Éº„Éö„Ç§„É≥„ÇíÈÅ∏Êäû
REVIEW_PANE=${REVIEW_PANES[0]}

# „Éï„Ç°„Ç§„É´„Çø„Ç§„Éó„Å´Âøú„Åò„Åü„É¨„Éì„É•„ÉºÂÜÖÂÆπ„ÅÆÊ±∫ÂÆö
get_review_focus() {
    case "$1" in
        *.py) echo "Code quality, security, test coverage" ;;
        *.js|*.ts) echo "Code quality, performance, type safety" ;;
        *.md) echo "Documentation clarity, accuracy, completeness" ;;
        *.json|*.yaml|*.yml) echo "Configuration correctness, security" ;;
        *) echo "General review" ;;
    esac
}

REVIEW_FOCUS=$(get_review_focus "$FILE_PATH")
RELATIVE_PATH=$(realpath --relative-to="$(pwd)" "$FILE_PATH" 2>/dev/null || echo "$FILE_PATH")

# „É¨„Éì„É•„Éº‰æùÈ†º„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÊßãÁØâ„Å®ÈÄÅ‰ø°
REVIEW_MESSAGE="üîç REVIEW REQUEST for: $RELATIVE_PATH
Focus areas: $REVIEW_FOCUS
Modified by: ${PANE_TITLE:-unknown} at $(date '+%Y-%m-%d %H:%M:%S')
File size: $(stat -c%s "$FILE_PATH" 2>/dev/null || echo "unknown") bytes

Please review and provide feedback. Reply with 'REVIEW_COMPLETE' when done."

if send_tmux_message "$REVIEW_PANE" "$REVIEW_MESSAGE"; then
    echo "‚úÖ Review request sent to pane-${REVIEW_PANE}"
    log_organization_activity "AUTO_REVIEW_TRIGGER: Sent review request for $RELATIVE_PATH to pane-$REVIEW_PANE"
    
    # ProjectManager„Å´„ÇÇÈÄöÁü•
    PM_PANE=$(find_project_manager_pane)
    if [[ -n "$PM_PANE" ]]; then
        send_tmux_message "$PM_PANE" "üìã Review requested: $RELATIVE_PATH ‚Üí pane-$REVIEW_PANE"
    fi
else
    echo "‚ùå Failed to send review request"
    log_organization_activity "AUTO_REVIEW_TRIGGER: Failed to send review request for $RELATIVE_PATH"
    exit 1
fi