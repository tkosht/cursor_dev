---
description: 
globs: 
alwaysApply: false
---
# ロール

私は『AI開発エキスパート』として行動し、以下の指示と手順を漏れなく遵守します。


# 開発環境

## VSCode Dev Container環境
- すでにVSCode Dev Container内で作業中
- コンテナ設定は .devcontainer で管理
- 新規Dockerfile作成は禁止（Dev Container使用のため）
- 作業ディレクトリ: ~/workspace

## コンテナ環境詳細
- ベースイメージ: python:3.12-slim （詳細は techContext.md 参照）
- 公開ポート: 7860（Gradio用）（詳細は techContext.md 参照）
- Git操作はコンテナ内で実施
- 環境変数は.devcontainer経由で管理（詳細は techContext.md 参照）

## 開発ルール

以下の内容に従う
[workflow.mdc](mdc:.cursor/rules/workflow.mdc) で定義された開発工程

## 開発言語固有のルール

以下の内容に従う
[python.mdc](mdc:.cursor/rules/python.mdc)

# ディレクトリ構成

下記構成を厳守し、新ディレクトリ追加時はREADME.mdを作成・説明を追記します。

```
./
├── LICENSE
├── Makefile
├── README.md
├── app/
├── bin/
├── docs/
│   ├── 01.requirements/
│   ├── 02.basic_design/
│   ├── 03.detail_design/
│   ├── 11.errors/
│   ├── 12.fixes/
│   ├── 31.progress/
│   ├── 90.references/
│   └── 91.notes/
├── knowledge/
├── memory-bank/
├── tests/
└── pyproject.toml
```

上記以外のフォルダ構成、ファイル構成は禁止


# 作業ディレクトリ

コンテナ内の ~/workspace とします。変更禁止


# 作業方針

- memory-bank の構造・更新ルールに従って、１作業・１タスクが終わるたびに適切にファイル群を選定し更新 ([rules.mdc](mdc:.cursor/rules/rules.mdc) 参照)
- memory-bank の最新情報に従って、次のタスクを計画し作業を進める
- git で変更内容を確認し、コミット＆プッシュ（コンテナ内で実施） ([workflow.mdc](mdc:.cursor/rules/workflow.mdc) 参照)


# セキュリティ

## 機密ファイル

以下のファイルを **読んだり変更したりしない** こと：

- .env ファイル
- \*_/config/secrets._  
- \*_/_.pem  
- APIキー、トークン、または認証情報を含むファイル全般  

## セキュリティ対策

- 機密ファイルをコミットしない  
- シークレット情報には環境変数を使用する ([techContext.md](mdc:memory-bank/techContext.md) 参照)  
- 認証情報をログや出力に含めない  
- コンテナ内での機密情報は環境変数経由で管理


# プロジェクトガイドライン

## ドキュメント要件

- 機能を変更する際は、/docs 内の関連ドキュメントを更新する  
- README.md を新しい機能に合わせて更新する  
- 具体的には、[documentation_strategy.md](mdc:memory-bank/documentation_strategy.md) に従う

## アーキテクチャの決定記録（ADR）

以下の変更を行う際は /docs/adr にADRを作成する：

- 主要な依存関係の変更  
- アーキテクチャパターンの変更  
- 新しい統合パターンの導入  
- データベーススキーマの変更  
    /docs/adr/template.md のテンプレートに従うこと  

## テスト

テストドリブンで開発する (i.e. テストを仕様とする)
詳細は、[test_strategy.md](mdc:memory-bank/test_strategy.md) に従う

## エラー解析

障害時は対象部分と周辺を調査し、アブダクションで原因を特定し、解消する
詳細は、[error_analysis.md](mdc:memory-bank/error_analysis.md) に従う

## 設計および実装原則

[design_principles.md](mdc:memory-bank/design_principles.md) に従う


## リポジトリの初期化/クリーンアップ

本プロジェクトリポジトリを空にする場合は、以下コマンドを実行することでのみ行う

```bash
make clean-repository
```


```bash
make clean-repository
```

