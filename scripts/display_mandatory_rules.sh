#!/bin/bash

# üö® MANDATORY RULES DISPLAY SCRIPT
# This script displays the mandatory rules checklist for task execution

function display_mandatory_rules_checklist() {
    echo "üö® MANDATORY RULES VERIFICATION CHECKLIST"
    echo "========================================="
    echo ""
    echo "üìã PRE-TASK KNOWLEDGE PROTOCOL"
    echo "‚ñ° 0. Execute date command for temporal context"
    echo "‚ñ° 1. Run smart_knowledge_load() for domain context (5-15s)"
    echo "‚ñ° 2. Verify loaded knowledge completeness"
    echo ""
    echo "‚úÖ MANDATORY RULES"
    echo "‚ñ° 1Ô∏è‚É£ SECURITY ABSOLUTE: No secrets/credentials exposure"
    echo "‚ñ° 2Ô∏è‚É£ VALUE ASSESSMENT: 5-point evaluation completed"
    echo "‚ñ° 3Ô∏è‚É£ CORE PRINCIPLES: Excellence mindset maintained"
    echo "‚ñ° 4Ô∏è‚É£ WORK MANAGEMENT: Feature branch verification"
    echo "‚ñ° 5Ô∏è‚É£ KNOWLEDGE ACCESS: Proper knowledge loading"
    echo "‚ñ° 6Ô∏è‚É£ AI-OPTIMIZED FORMAT: Structured knowledge recording"
    echo "‚ñ° 7Ô∏è‚É£ CHECKLIST-DRIVEN: CDTE framework applied when applicable"
    echo "‚ñ° 8Ô∏è‚É£ NO MOCKS: Real API calls only - NO mocking in tests"
    echo "‚ñ° 9Ô∏è‚É£ WEB RESEARCH: Unknown items researched via WebSearch"
    echo "‚ñ° üîü FACT-BASED: No speculation, verified facts only"
    echo ""
    echo "üîí SECURITY CHECKLIST"
    echo "‚ñ° No env.*API, cat.*key, echo.*token, grep.*secret"
    echo "‚ñ° No printenv.*KEY, cat .env, export.*SECRET"
    echo ""
    echo "üíé VALUE ASSESSMENT (5-POINT)"
    echo "‚ñ° SECURITY: No credential exposure?"
    echo "‚ñ° USER VALUE: Serves user not convenience?"
    echo "‚ñ° LONG-TERM: Sustainable solution?"
    echo "‚ñ° FACT-BASED: Verified information?"
    echo "‚ñ° ALTERNATIVES: Better approach evaluated?"
    echo ""
    echo "üåø WORK MANAGEMENT"
    echo "‚ñ° NOT on main/master branch"
    echo "‚ñ° Branch pattern: feature/* | docs/* | fix/* | task/*"
    echo ""
    echo "üöÄ EXECUTION CHECKLIST"
    echo "‚ñ° 1. AI COMPLIANCE: python scripts/pre_action_check.py --strict-mode"
    echo "‚ñ° 2. DATE CONTEXT: date command executed"
    echo "‚ñ° 3. WORK BRANCH: Verified not on main/master"
    echo "‚ñ° 4. KNOWLEDGE LOAD: smart_knowledge_load \"domain\""
    echo "‚ñ° 5. TDD: Test written FIRST"
    echo "‚ñ° 6. NO SPECULATION: Facts only"
    echo "‚ñ° 7. QUALITY GATES: Before commit"
    echo "‚ñ° 8. PR CREATION: When done"
    echo ""
    echo "üìö MANDATORY REFERENCES:"
    echo "   ‚Ä¢ memory-bank/00-core/*mandatory*.md"
    echo "   ‚Ä¢ memory-bank/11-checklist-driven/checklist_driven_execution_framework.md"
    echo "   ‚Ä¢ memory-bank/02-organization/tmux_organization_success_patterns.md (for tmux)"
    echo "   ‚Ä¢ checklists/mandatory_rules_checklist.md (full version)"
    echo ""
    read -p "‚ùì Confirm ALL mandatory rules verified before starting task (y/N): " confirmation
    if [[ "$confirmation" != "y" && "$confirmation" != "Y" ]]; then
        echo "‚ùå TASK ABORTED: Mandatory rules must be verified before proceeding"
        return 1
    fi
    echo "‚úÖ MANDATORY RULES VERIFICATION COMPLETED"
    echo ""
    echo "‚ö° Quick commands:"
    echo "   smart_knowledge_load \"domain\"  # Load domain knowledge"
    echo "   git checkout -b task/description  # Create task branch"
    echo "   python scripts/pre_action_check.py --strict-mode  # AI compliance"
    echo ""
    return 0
}

# Allow direct execution
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    display_mandatory_rules_checklist
fi